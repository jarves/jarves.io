<h1><a href="documentation/fields">Form Fields</a> <span class="arrow-right"></span> {{ typeConfig.label }}
    <div class="sub">
        {{ typeConfig.id }} (<code>@{{ typeConfig.service }}</code>)
    </div>
</h1>

<div class="field-description">
    {{ typeConfig.description|markdowner }}
</div>


{% if not typeConfig.userInterfaceOnly %}
<p class="description">
    Backend &raquo; <a href="https://github.com/jarves/jarves/blob/master/Admin/FieldTypes/{{ extractor.shortClassName }}.php">Jarves\Admin\FieldTypes\{{ extractor.shortClassName }}</a><br/>
    Frontend &raquo; {{ typeConfig.javascript|default('@Jarves/admin/js/jarves/FieldTypes/' ~ typeConfig.id|capitalize ~ '.js' ) }}
</p>
{% endif %}

<h3>Options</h3>

<p class="description">
Please note that all fields have common options, that are not displayed on this page.
Visit <a href="documentation/fields#Common_Options_List">Fields Common Options List</a> for more information.
</p>

{% if typeConfig.options %}

    {% for field in typeConfig.options  %}
        <div class="field-option">
            <h4 class="field"><code>{{ field.id }}</code>
                <div class="sub">{{ field.label }} ({{ field.type }})</div>
            </h4>
            {{ field.description|markdowner }}
        </div>


    {% endfor %}

{% else %}
    <div class="description">No additional options available for this field.</div>
{% endif %}


{% if typeConfig.userInterfaceOnly %}
    <h4>User Interface only.</h4>

    This field has not model counterpart, and thus does not generate any model related stuff nor saves it content to the database.
{% else %}

    <h3>Object changes</h3>

    <p class="description">This field changes your object in one way or another. It can generate one or more model fields (for Propel mode called columns),
        new relations to other objects or even add new objects the field needs to work correctly.</p>

    <h4>Added Fields</h4>


    {% if type.columns %}
    <table class="table">
        <tr>
            <th>Name</th>
            <th>PHP Type</th>
            <th>Storage Type</th>
        </tr>
        {% for column in type.columns  %}
        <tr>
            <td>{{ column.name }}</td>
            <td>{{ column.phpDataType }}</td>
            <td>{{ column.sqlDataType }}</td>
        </tr>
        {% endfor %}
    </table>
    {% else %}
        <div class="description">None</div>
    {% endif %}

    <h4>Added Relations</h4>
    {% if object.relations %}

        <p class="description">Depending on the relation type, the underlying storage in case of Propel is adding
            either a foreign key or a cross table.
        </p>


    <table class="table">
        <tr>
            <th>Name</th>
            <th>To Object</th>
            <th>Type</th>
        </tr>
        {% for relation in object.relations %}
            <tr>
                <td>{{ relation.name }}</td>
                <td>{{ relation.foreignObjectKey }}</td>
                <td>{{ relation.type }}</td>
            </tr>
        {% endfor %}
    </table>
    {% else %}
        <div class="description">None</div>
    {% endif %}

    <h4>Added Objects</h4>
    {% if addedObjects %}

    <table class="table">
        <tr>
            <th>key</th>
            <th>Storage</th>
            <th>Fields</th>
        </tr>
        {% for object in addedObjects %}
            <tr>
                <td>{{ object.key }}</td>
                <td>{{ object.storageService }}</td>
            </tr>
        {% endfor %}
    </table>
    {% else %}
        <div class="description">None</div>
    {% endif %}
{% endif %}
